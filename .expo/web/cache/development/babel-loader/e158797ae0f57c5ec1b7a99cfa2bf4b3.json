{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction saveItem(listItem) {\n  var savedItems, response;\n  return _regeneratorRuntime.async(function saveItem$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          listItem.id = new Date().getTime();\n          savedItems = [];\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('items'));\n\n        case 4:\n          response = _context.sent;\n          if (response) savedItems = JSON.parse(response);\n          savedItems.push(listItem);\n          return _context.abrupt(\"return\", AsyncStorage.setItem('items', JSON.stringify(savedItems)));\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nmodule.exports = {\n  saveItem: saveItem\n};\n\nfunction deleteItem(id) {\n  var savedItems, index;\n  return _regeneratorRuntime.async(function deleteItem$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(getItems());\n\n        case 2:\n          savedItems = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(savedItems.findIndex(function (item) {\n            return item.id === id;\n          }));\n\n        case 5:\n          index = _context2.sent;\n          savedItems.splice(index, 1);\n          return _context2.abrupt(\"return\", AsyncStorage.setItem('items', JSON.stringify(savedItems)));\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getItems() {\n  return AsyncStorage.getItem('items').then(function (response) {\n    if (response) return Promise.resolve(JSON.parse(response));else return Promise.resolve([]);\n  });\n}\n\nfunction getItem(id) {\n  var savedItems;\n  return _regeneratorRuntime.async(function getItem$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(getItems());\n\n        case 2:\n          savedItems = _context3.sent;\n          return _context3.abrupt(\"return\", savedItems.find(function (item) {\n            return item.id === id;\n          }));\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nmodule.exports = {\n  saveItem: saveItem,\n  getItems: getItems,\n  getItem: getItem,\n  deleteItem: deleteItem\n};","map":{"version":3,"sources":["C:/Users/Aluno/Desktop/ozoriocrud/ozoriocrudcompras-reactnative/Database.js"],"names":["AsyncStorage","saveItem","listItem","id","Date","getTime","savedItems","getItem","response","JSON","parse","push","setItem","stringify","module","exports","deleteItem","getItems","findIndex","item","index","splice","then","Promise","resolve","find"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;;AAEA,SAAeC,QAAf,CAAwBC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACIA,UAAAA,QAAQ,CAACC,EAAT,GAAc,IAAIC,IAAJ,GAAWC,OAAX,EAAd;AACIC,UAAAA,UAFR,GAEqB,EAFrB;AAAA;AAAA,2CAG2BN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAH3B;;AAAA;AAGUC,UAAAA,QAHV;AAKI,cAAGA,QAAH,EAAaF,UAAU,GAAGG,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAb;AACbF,UAAAA,UAAU,CAACK,IAAX,CAAgBT,QAAhB;AANJ,2CAQWF,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,SAAL,CAAeP,UAAf,CAA9B,CARX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWAQ,MAAM,CAACC,OAAP,GAAiB;AACbd,EAAAA,QAAQ,EAARA;AADa,CAAjB;;AAGA,SAAee,UAAf,CAA0Bb,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAC2Bc,QAAQ,EADnC;;AAAA;AACQX,UAAAA,UADR;AAAA;AAAA,2CAEwBA,UAAU,CAACY,SAAX,CAAqB,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAAChB,EAAL,KAAYA,EAAhB;AAAA,WAAzB,CAFxB;;AAAA;AAEUiB,UAAAA,KAFV;AAGId,UAAAA,UAAU,CAACe,MAAX,CAAkBD,KAAlB,EAAyB,CAAzB;AAHJ,4CAIWpB,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,SAAL,CAAeP,UAAf,CAA9B,CAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAASW,QAAT,GAAmB;AACf,SAAOjB,YAAY,CAACO,OAAb,CAAqB,OAArB,EACEe,IADF,CACO,UAAAd,QAAQ,EAAI;AACd,QAAGA,QAAH,EACI,OAAOe,OAAO,CAACC,OAAR,CAAgBf,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAhB,CAAP,CADJ,KAGI,OAAOe,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;AACP,GANF,CAAP;AAOH;;AAED,SAAejB,OAAf,CAAuBJ,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAC6Bc,QAAQ,EADrC;;AAAA;AACUX,UAAAA,UADV;AAAA,4CAEWA,UAAU,CAACmB,IAAX,CAAgB,UAAAN,IAAI;AAAA,mBAAIA,IAAI,CAAChB,EAAL,KAAYA,EAAhB;AAAA,WAApB,CAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAW,MAAM,CAACC,OAAP,GAAiB;AACbd,EAAAA,QAAQ,EAARA,QADa;AAEbgB,EAAAA,QAAQ,EAARA,QAFa;AAGbV,EAAAA,OAAO,EAAPA,OAHa;AAIbS,EAAAA,UAAU,EAAVA;AAJa,CAAjB","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nasync function saveItem(listItem){\r\n    listItem.id = new Date().getTime();\r\n    let savedItems = [];\r\n    const response = await AsyncStorage.getItem('items');\r\n    \r\n    if(response) savedItems = JSON.parse(response);\r\n    savedItems.push(listItem);\r\n    \r\n    return AsyncStorage.setItem('items', JSON.stringify(savedItems));\r\n}\r\n\r\nmodule.exports = {\r\n    saveItem\r\n}\r\nasync function deleteItem(id){\r\n    let savedItems = await getItems();\r\n    const index = await savedItems.findIndex(item => item.id === id);\r\n    savedItems.splice(index, 1);\r\n    return AsyncStorage.setItem('items', JSON.stringify(savedItems));\r\n}\r\n\r\n\r\n\r\n\r\nfunction getItems(){\r\n    return AsyncStorage.getItem('items')\r\n            .then(response => {\r\n                if(response)\r\n                    return Promise.resolve(JSON.parse(response));\r\n                else\r\n                    return Promise.resolve([]);\r\n            })\r\n}\r\n\r\nasync function getItem(id){\r\n    const savedItems = await getItems();\r\n    return savedItems.find(item => item.id === id);\r\n}\r\n\r\nmodule.exports = {\r\n    saveItem,\r\n    getItems,\r\n    getItem,\r\n    deleteItem\r\n}"]},"metadata":{},"sourceType":"module"}