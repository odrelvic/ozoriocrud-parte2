{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Database from \"./Database\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AppForm(_ref) {\n  var navigation = _ref.navigation;\n  var id = route.params ? route.params.id : undefined;\n  useEffect(function () {\n    if (!route.params) return;\n    setDescricao(route.params.descricao);\n    setQuantidade(route.params.quantidade.toString());\n  }, [route]);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      descricao = _useState2[0],\n      setDescricao = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      quantidade = _useState4[0],\n      setQuantidade = _useState4[1];\n\n  function handleDescriptionChange(descricao) {\n    setDescricao(descricao);\n  }\n\n  function handleQuantityChange(quantidade) {\n    setQuantidade(quantidade);\n  }\n\n  function handleButtonPress() {\n    var listItem;\n    return _regeneratorRuntime.async(function handleButtonPress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            listItem = {\n              descricao: descricao,\n              quantidade: parseInt(quantidade)\n            };\n            Database.saveItem(listItem).then(function (response) {\n              return navigation.navigate(\"AppList\", listItem);\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Item para comprar\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        onChangeText: handleDescriptionChange,\n        placeholder: \"O que est\\xE1 faltando em casa?\",\n        clearButtonMode: \"always\",\n        value: descricao\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: handleQuantityChange,\n        placeholder: \"Digite a quantidade\",\n        keyboardType: 'numeric',\n        clearButtonMode: \"always\",\n        value: quantidade.toString()\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleButtonPress,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Salvar\"\n        })\n      })]\n    }), _jsx(StatusBar, {\n      style: \"light\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#D93600',\n    alignItems: 'center'\n  },\n  title: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 50\n  },\n  inputContainer: {\n    flex: 1,\n    marginTop: 30,\n    width: '90%',\n    padding: 20,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n    alignItems: 'stretch',\n    backgroundColor: '#fff'\n  },\n  input: {\n    marginTop: 10,\n    height: 60,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    paddingHorizontal: 24,\n    fontSize: 16,\n    alignItems: 'stretch'\n  },\n  button: {\n    marginTop: 10,\n    height: 60,\n    backgroundColor: 'blue',\n    borderRadius: 10,\n    paddingHorizontal: 24,\n    fontSize: 16,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 20,\n    shadowOpacity: 20,\n    shadowColor: '#ccc'\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/SENAI/Desktop/ozoriocrud/ozoriocrud-parte2/AppForm.js"],"names":["React","useState","useEffect","StatusBar","Database","AppForm","navigation","id","route","params","undefined","setDescricao","descricao","setQuantidade","quantidade","toString","handleDescriptionChange","handleQuantityChange","handleButtonPress","listItem","parseInt","saveItem","then","response","navigate","styles","container","title","inputContainer","input","button","buttonText","StyleSheet","create","flex","backgroundColor","alignItems","color","fontSize","fontWeight","marginTop","width","padding","borderTopLeftRadius","borderTopRightRadius","height","borderRadius","paddingHorizontal","justifyContent","elevation","shadowOpacity","shadowColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\nimport Database from './Database';\r\n\r\nexport default function AppForm({navigation}) {\r\n  const id= route.params ? route.params.id : undefined;\r\n  useEffect(() => {\r\n    if(!route.params) return;\r\n    setDescricao(route.params.descricao);\r\n    setQuantidade(route.params.quantidade.toString());\r\n  }, [route])\r\n  const [descricao, setDescricao] = useState('');\r\n  const [quantidade, setQuantidade] = useState('');\r\n\r\n  function handleDescriptionChange(descricao) { setDescricao(descricao); }\r\n  function handleQuantityChange(quantidade) { setQuantidade(quantidade); }\r\n  async function handleButtonPress(){ \r\n    const listItem = {descricao, quantidade: parseInt(quantidade)};\r\n    Database.saveItem(listItem)\r\n      .then(response => navigation.navigate(\"AppList\", listItem));\r\n  }\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Item para comprar</Text>\r\n        <View style={styles.inputContainer}> \r\n        <TextInput \r\n  style={styles.input} \r\n  onChangeText={handleDescriptionChange} \r\n  placeholder=\"O que estÃ¡ faltando em casa?\"\r\n  clearButtonMode=\"always\"\r\n  value={descricao} /> \r\n<TextInput \r\n  style={styles.input} \r\n  onChangeText={handleQuantityChange} \r\n  placeholder=\"Digite a quantidade\" \r\n  keyboardType={'numeric'}\r\n  clearButtonMode=\"always\"\r\n  value={quantidade.toString()} />\r\n          <TouchableOpacity style={styles.button} onPress={handleButtonPress}>\r\n            <Text style={styles.buttonText}>Salvar</Text>\r\n          </TouchableOpacity> \r\n        </View>\r\n        <StatusBar style=\"light\" />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#D93600',\r\n      alignItems: 'center',\r\n    },\r\n    title: {\r\n      color: '#fff',\r\n      fontSize: 20,\r\n      fontWeight: 'bold',\r\n      marginTop: 50,\r\n    },\r\n    inputContainer: {\r\n      flex: 1,\r\n      marginTop: 30,\r\n      width: '90%',\r\n      padding: 20,\r\n      borderTopLeftRadius: 10,\r\n      borderTopRightRadius: 10,\r\n      alignItems: 'stretch',\r\n      backgroundColor: '#fff'\r\n    },\r\n    input: {\r\n      marginTop: 10,\r\n      height: 60,\r\n      backgroundColor: '#fff',\r\n      borderRadius: 10,\r\n      paddingHorizontal: 24,\r\n      fontSize: 16,\r\n      alignItems: 'stretch'\r\n    },\r\n    button: {\r\n      marginTop: 10,\r\n      height: 60,\r\n      backgroundColor: 'blue',\r\n      borderRadius: 10,\r\n      paddingHorizontal: 24,\r\n      fontSize: 16,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      elevation: 20,\r\n      shadowOpacity: 20,\r\n      shadowColor: '#ccc',\r\n    },\r\n    buttonText: {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}